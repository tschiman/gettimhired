{
	"info": {
		"_postman_id": "1c695caf-eaec-41a0-ad5d-a3eaeb4d76da",
		"name": "gettimhired.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "353041"
	},
	"item": [
		{
			"name": "REST",
			"item": [
				{
					"name": "Candidate",
					"item": [
						{
							"name": "Get All Candidates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Candidate by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Candidate by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Timothy\",\r\n    \"lastName\": \"Schimandle\",\r\n    \"summary\": \"I have nearly 10 years of software engineering experience and have been professionally writing code in a microservice environment since 2014. I have proven expertise using Java and the Spring Framework. My skills allow me to build fast, reliable, and secure microservice applications from the ground up, powered by code written to be clear, concise, and performant.\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Candidate By Id",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Mike\",\r\n    \"lastName\": \"Manic\",\r\n    \"summary\": \"Mike was born on July 28th 2022 and lived till Janurary 18th 2023\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Education",
					"item": [
						{
							"name": "Get All Educations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true,
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Education by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations/{{EDUCATION_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations",
										"{{EDUCATION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Education by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations/{{EDUCATION_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations",
										"{{EDUCATION_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Education",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Rocklin High School\",\r\n    \"graduated\": true,\r\n    \"areaOfStudy\": \"Physics and Math\",\r\n    \"educationLevel\": \"DIPLOMA\",\r\n    \"startDate\": \"1999-08-01\",\r\n    \"endDate\": \"2003-06-01\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Education By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"CSUS\",\r\n    \"startDate\": \"1985-01-01\",\r\n    \"endDate\": \"1985-01-01\",\r\n    \"graduated\": true,\r\n    \"areaOfStudy\": \"Liberal Studies\",\r\n    \"educationLevel\": \"BACHELORS\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations/{{EDUCATION_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations",
										"{{EDUCATION_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Job",
					"item": [
						{
							"name": "Get All Jobs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"JOB_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/jobs",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/jobs/{{JOB_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"jobs",
										"{{JOB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job by ID",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/educations/{{JOB_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"educations",
										"{{JOB_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"JOB_ID\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyName\": \"triValence\",\r\n    \"title\": \"Principal Java Engineer\",\r\n    \"startDate\": \"2022-04-01\",\r\n    \"endDate\": \"2022-08-01\",\r\n    \"skills\": [\r\n        \"Java\",\"Spring\",\"PostGres\",\"Angular\"\r\n    ],\r\n    \"achievements\": [\r\n        \"Worked on an Angular front end & Java 11 backend using Spring and Postgres\",\"Left for health reasons – additional information available upon request\"\r\n    ],\r\n    \"currentlyWorking\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/jobs",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Job By Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"JOB_ID\", pm.response.json().id);"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"companyName\": \"Bark\",\r\n        \"title\": \"Senior Software Engineer\",\r\n        \"startDate\": \"1985-01-01\",\r\n        \"endDate\": \"1985-01-01\",\r\n        \"skills\": [\r\n        ],\r\n        \"achievements\": [\r\n            \"Award\"\r\n        ],\r\n        \"currentlyWorking\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{HOST}}/api/candidates/{{CANDIDATE_ID}}/jobs/{{JOB_ID}}",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"api",
										"candidates",
										"{{CANDIDATE_ID}}",
										"jobs",
										"{{JOB_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GraphQL",
			"item": [
				{
					"name": "candidate",
					"item": [
						{
							"name": "query candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n  getCandidates {\r\n    id\r\n    userId\r\n    firstName\r\n    lastName\r\n    summary\r\n  },\r\n  getCandidateById(id: \"{{CANDIDATE_ID}}\") {\r\n    id\r\n    userId\r\n    firstName\r\n    lastName\r\n    summary\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json().data.createCandidate.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  createCandidate(candidate: {id:\"\", userId:\"\", firstName: \"Andrew\", lastName: \"Smith\", summary: \"New candidate summary\"}) {\r\n    id\r\n    userId\r\n    firstName\r\n    lastName\r\n    summary\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json().data.createCandidate.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  updateCandidate(candidate: {id:\"{{CANDIDATE_ID}}\", userId:\"\", firstName: \"Tim\", lastName: \"Smith\", summary: \"New candidate summary\"}) {\r\n    id\r\n    userId\r\n    firstName\r\n    lastName\r\n    summary\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json().data.createCandidate.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n    deleteCandidate(id: \"{{CANDIDATE_ID}}\")\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "education",
					"item": [
						{
							"name": "query education",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n  getEducations(candidateId: \"{{CANDIDATE_ID}}\") {\r\n    id\r\n    userId\r\n    candidateId\r\n    name\r\n    startDate\r\n    endDate\r\n    graduated\r\n    areaOfStudy\r\n    educationLevel\r\n  },\r\n  getEducationById(id: \"{{EDUCATION_ID}}\") {\r\n    id\r\n    userId\r\n    candidateId\r\n    name\r\n    startDate\r\n    endDate\r\n    graduated\r\n    areaOfStudy\r\n    educationLevel\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create education",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json().data.createEducation.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  createEducation(education: {id:\"\", userId:\"\", candidateId:\"{{CANDIDATE_ID}}\", name: \"School\", startDate: \"2016-01-01\", endDate: \"2017-01-01\", graduated: true, educationLevel: \"BACHELORS\", areaOfStudy: \"Math\"}) {\r\n    id\r\n    userId\r\n    candidateId\r\n    name\r\n    startDate\r\n    endDate\r\n    graduated\r\n    educationLevel\r\n    areaOfStudy\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update education",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json().data.createEducation.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  updateEducation(education: {id:\"{{EDUCATION_ID}}\", userId:\"\", candidateId:\"{{CANDIDATE_ID}}\", name: \"Bark School\", startDate: \"2016-01-01\", endDate: \"2017-01-01\", graduated: true, educationLevel: \"BACHELORS\", areaOfStudy: \"Math\"}) {\r\n    id\r\n    userId\r\n    candidateId\r\n    name\r\n    startDate\r\n    endDate\r\n    graduated\r\n    educationLevel\r\n    areaOfStudy\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete education",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"EDUCATION_ID\", pm.response.json().data.createEducation.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n    deleteEducation(id: \"{{EDUCATION_ID}}\")\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "job",
					"item": [
						{
							"name": "query job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"CANDIDATE_ID\", pm.response.json()[0].id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n  getJobs(candidateId: \"{{CANDIDATE_ID}}\") {\r\n    id\r\n    userId\r\n    candidateId\r\n    companyName\r\n    title\r\n    startDate\r\n    endDate\r\n    skills\r\n    achievements\r\n    currentlyWorking\r\n  },\r\n  getJobById(id: \"{{JOB_ID}}\") {\r\n    id\r\n    userId\r\n    candidateId\r\n    companyName\r\n    title\r\n    startDate\r\n    endDate\r\n    skills\r\n    achievements\r\n    currentlyWorking\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"JOB_ID\", pm.response.json().data.createJob.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  createJob(job: {id:\"\", userId:\"\", candidateId:\"{{CANDIDATE_ID}}\", companyName: \"Company\", title: \"Title\", startDate: \"2017-01-01\", endDate: \"2019-01-01\", skills: [\"SKill1\",\"Skill2\"],achievements: [\"A1\",\"A2\"], currentlyWorking: false}) {\r\n    id\r\n    userId\r\n    candidateId\r\n    companyName\r\n    title\r\n    startDate\r\n    endDate\r\n    skills\r\n    achievements\r\n    currentlyWorking\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"JOB_ID\", pm.response.json().data.createJob.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  updateJob(job: {id:\"{{JOB_ID}}\", userId:\"\", candidateId:\"{{CANDIDATE_ID}}\", companyName: \"Bark Company Name\", title: \"Bark Title\", startDate: \"2017-01-01\", endDate: \"2019-01-01\", skills: [\"SKill1\",\"Skill2\"],achievements: [\"A1\",\"A2\"], currentlyWorking: false}) {\r\n    id\r\n    userId\r\n    candidateId\r\n    companyName\r\n    title\r\n    startDate\r\n    endDate\r\n    skills\r\n    achievements\r\n    currentlyWorking\r\n  }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Fixed TypeError by adding parentheses to pm.response.json()\r",
											"pm.environment.set(\"JOB_ID\", pm.response.json().data.createJob.id);\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "{{USER_PASSWORD}}",
											"type": "string"
										},
										{
											"key": "username",
											"value": "{{USER_ID}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-GETTIMHIRED-USERNAME",
										"value": "72293096-7a76-4caf-bcc8-ca6060fbb06a",
										"type": "text"
									},
									{
										"key": "X-GETTIMHIRED-PASSWORD",
										"value": "e49207b9-4fae-448e-8746-25b66c14c568",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n  deleteJob(id: \"{{JOB_ID}}\")\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{HOST}}/graphql",
									"host": [
										"{{HOST}}"
									],
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}